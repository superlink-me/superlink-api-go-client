/*
Superlink API

API for Superlink

API version: 1.0
Contact: support@superlink.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package SuperlinkAPI

import (
	"encoding/json"
)

// checks if the ApiResponseError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiResponseError{}

// ApiResponseError struct for ApiResponseError
type ApiResponseError struct {
	Field *string `json:"field,omitempty"`
	Info *string `json:"info,omitempty"`
}

// NewApiResponseError instantiates a new ApiResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiResponseError() *ApiResponseError {
	this := ApiResponseError{}
	return &this
}

// NewApiResponseErrorWithDefaults instantiates a new ApiResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiResponseErrorWithDefaults() *ApiResponseError {
	this := ApiResponseError{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ApiResponseError) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponseError) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ApiResponseError) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ApiResponseError) SetField(v string) {
	o.Field = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *ApiResponseError) GetInfo() string {
	if o == nil || IsNil(o.Info) {
		var ret string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponseError) GetInfoOk() (*string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *ApiResponseError) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given string and assigns it to the Info field.
func (o *ApiResponseError) SetInfo(v string) {
	o.Info = &v
}

func (o ApiResponseError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiResponseError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	return toSerialize, nil
}

type NullableApiResponseError struct {
	value *ApiResponseError
	isSet bool
}

func (v NullableApiResponseError) Get() *ApiResponseError {
	return v.value
}

func (v *NullableApiResponseError) Set(val *ApiResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableApiResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableApiResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiResponseError(val *ApiResponseError) *NullableApiResponseError {
	return &NullableApiResponseError{value: val, isSet: true}
}

func (v NullableApiResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


