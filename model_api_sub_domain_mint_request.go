/*
Superlink

API for Superlink

API version: v0.4.1
Contact: support@superlink.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package superlink

import (
	"encoding/json"
)

// checks if the ApiSubDomainMintRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSubDomainMintRequest{}

// ApiSubDomainMintRequest struct for ApiSubDomainMintRequest
type ApiSubDomainMintRequest struct {
	NameData *ApiSubDomainNameData `json:"nameData,omitempty"`
}

// NewApiSubDomainMintRequest instantiates a new ApiSubDomainMintRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSubDomainMintRequest() *ApiSubDomainMintRequest {
	this := ApiSubDomainMintRequest{}
	return &this
}

// NewApiSubDomainMintRequestWithDefaults instantiates a new ApiSubDomainMintRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSubDomainMintRequestWithDefaults() *ApiSubDomainMintRequest {
	this := ApiSubDomainMintRequest{}
	return &this
}

// GetNameData returns the NameData field value if set, zero value otherwise.
func (o *ApiSubDomainMintRequest) GetNameData() ApiSubDomainNameData {
	if o == nil || IsNil(o.NameData) {
		var ret ApiSubDomainNameData
		return ret
	}
	return *o.NameData
}

// GetNameDataOk returns a tuple with the NameData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSubDomainMintRequest) GetNameDataOk() (*ApiSubDomainNameData, bool) {
	if o == nil || IsNil(o.NameData) {
		return nil, false
	}
	return o.NameData, true
}

// HasNameData returns a boolean if a field has been set.
func (o *ApiSubDomainMintRequest) HasNameData() bool {
	if o != nil && !IsNil(o.NameData) {
		return true
	}

	return false
}

// SetNameData gets a reference to the given ApiSubDomainNameData and assigns it to the NameData field.
func (o *ApiSubDomainMintRequest) SetNameData(v ApiSubDomainNameData) {
	o.NameData = &v
}

func (o ApiSubDomainMintRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSubDomainMintRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NameData) {
		toSerialize["nameData"] = o.NameData
	}
	return toSerialize, nil
}

type NullableApiSubDomainMintRequest struct {
	value *ApiSubDomainMintRequest
	isSet bool
}

func (v NullableApiSubDomainMintRequest) Get() *ApiSubDomainMintRequest {
	return v.value
}

func (v *NullableApiSubDomainMintRequest) Set(val *ApiSubDomainMintRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSubDomainMintRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSubDomainMintRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSubDomainMintRequest(val *ApiSubDomainMintRequest) *NullableApiSubDomainMintRequest {
	return &NullableApiSubDomainMintRequest{value: val, isSet: true}
}

func (v NullableApiSubDomainMintRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSubDomainMintRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


