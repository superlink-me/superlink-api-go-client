/*
Superlink

API for Superlink

API version: v0.4.2
Contact: support@superlink.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package superlink

import (
	"encoding/json"
)

// checks if the ApiParentDomainValidationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiParentDomainValidationResponse{}

// ApiParentDomainValidationResponse struct for ApiParentDomainValidationResponse
type ApiParentDomainValidationResponse struct {
	ParentDomain *string `json:"parentDomain,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Status *bool `json:"status,omitempty"`
}

// NewApiParentDomainValidationResponse instantiates a new ApiParentDomainValidationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiParentDomainValidationResponse() *ApiParentDomainValidationResponse {
	this := ApiParentDomainValidationResponse{}
	return &this
}

// NewApiParentDomainValidationResponseWithDefaults instantiates a new ApiParentDomainValidationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiParentDomainValidationResponseWithDefaults() *ApiParentDomainValidationResponse {
	this := ApiParentDomainValidationResponse{}
	return &this
}

// GetParentDomain returns the ParentDomain field value if set, zero value otherwise.
func (o *ApiParentDomainValidationResponse) GetParentDomain() string {
	if o == nil || IsNil(o.ParentDomain) {
		var ret string
		return ret
	}
	return *o.ParentDomain
}

// GetParentDomainOk returns a tuple with the ParentDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiParentDomainValidationResponse) GetParentDomainOk() (*string, bool) {
	if o == nil || IsNil(o.ParentDomain) {
		return nil, false
	}
	return o.ParentDomain, true
}

// HasParentDomain returns a boolean if a field has been set.
func (o *ApiParentDomainValidationResponse) HasParentDomain() bool {
	if o != nil && !IsNil(o.ParentDomain) {
		return true
	}

	return false
}

// SetParentDomain gets a reference to the given string and assigns it to the ParentDomain field.
func (o *ApiParentDomainValidationResponse) SetParentDomain(v string) {
	o.ParentDomain = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ApiParentDomainValidationResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiParentDomainValidationResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ApiParentDomainValidationResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ApiParentDomainValidationResponse) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiParentDomainValidationResponse) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiParentDomainValidationResponse) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiParentDomainValidationResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *ApiParentDomainValidationResponse) SetStatus(v bool) {
	o.Status = &v
}

func (o ApiParentDomainValidationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiParentDomainValidationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentDomain) {
		toSerialize["parentDomain"] = o.ParentDomain
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableApiParentDomainValidationResponse struct {
	value *ApiParentDomainValidationResponse
	isSet bool
}

func (v NullableApiParentDomainValidationResponse) Get() *ApiParentDomainValidationResponse {
	return v.value
}

func (v *NullableApiParentDomainValidationResponse) Set(val *ApiParentDomainValidationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiParentDomainValidationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiParentDomainValidationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiParentDomainValidationResponse(val *ApiParentDomainValidationResponse) *NullableApiParentDomainValidationResponse {
	return &NullableApiParentDomainValidationResponse{value: val, isSet: true}
}

func (v NullableApiParentDomainValidationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiParentDomainValidationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


