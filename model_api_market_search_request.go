/*
Superlink

API for Superlink

API version: v0.5.0
Contact: support@superlink.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package superlink

import (
	"encoding/json"
)

// checks if the ApiMarketSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMarketSearchRequest{}

// ApiMarketSearchRequest struct for ApiMarketSearchRequest
type ApiMarketSearchRequest struct {
	Addrs []ApiAddressRecord `json:"addrs,omitempty"`
	Query *string `json:"query,omitempty"`
}

// NewApiMarketSearchRequest instantiates a new ApiMarketSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMarketSearchRequest() *ApiMarketSearchRequest {
	this := ApiMarketSearchRequest{}
	return &this
}

// NewApiMarketSearchRequestWithDefaults instantiates a new ApiMarketSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMarketSearchRequestWithDefaults() *ApiMarketSearchRequest {
	this := ApiMarketSearchRequest{}
	return &this
}

// GetAddrs returns the Addrs field value if set, zero value otherwise.
func (o *ApiMarketSearchRequest) GetAddrs() []ApiAddressRecord {
	if o == nil || IsNil(o.Addrs) {
		var ret []ApiAddressRecord
		return ret
	}
	return o.Addrs
}

// GetAddrsOk returns a tuple with the Addrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMarketSearchRequest) GetAddrsOk() ([]ApiAddressRecord, bool) {
	if o == nil || IsNil(o.Addrs) {
		return nil, false
	}
	return o.Addrs, true
}

// HasAddrs returns a boolean if a field has been set.
func (o *ApiMarketSearchRequest) HasAddrs() bool {
	if o != nil && !IsNil(o.Addrs) {
		return true
	}

	return false
}

// SetAddrs gets a reference to the given []ApiAddressRecord and assigns it to the Addrs field.
func (o *ApiMarketSearchRequest) SetAddrs(v []ApiAddressRecord) {
	o.Addrs = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ApiMarketSearchRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMarketSearchRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ApiMarketSearchRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *ApiMarketSearchRequest) SetQuery(v string) {
	o.Query = &v
}

func (o ApiMarketSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMarketSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addrs) {
		toSerialize["addrs"] = o.Addrs
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableApiMarketSearchRequest struct {
	value *ApiMarketSearchRequest
	isSet bool
}

func (v NullableApiMarketSearchRequest) Get() *ApiMarketSearchRequest {
	return v.value
}

func (v *NullableApiMarketSearchRequest) Set(val *ApiMarketSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMarketSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMarketSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMarketSearchRequest(val *ApiMarketSearchRequest) *NullableApiMarketSearchRequest {
	return &NullableApiMarketSearchRequest{value: val, isSet: true}
}

func (v NullableApiMarketSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMarketSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


