/*
Superlink

API for Superlink

API version: v0.4.1
Contact: support@superlink.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package superlink

import (
	"encoding/json"
)

// checks if the ApiParentDomainSearchResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiParentDomainSearchResponse{}

// ApiParentDomainSearchResponse struct for ApiParentDomainSearchResponse
type ApiParentDomainSearchResponse struct {
	AvailableParentDomain []string `json:"availableParentDomain,omitempty"`
}

// NewApiParentDomainSearchResponse instantiates a new ApiParentDomainSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiParentDomainSearchResponse() *ApiParentDomainSearchResponse {
	this := ApiParentDomainSearchResponse{}
	return &this
}

// NewApiParentDomainSearchResponseWithDefaults instantiates a new ApiParentDomainSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiParentDomainSearchResponseWithDefaults() *ApiParentDomainSearchResponse {
	this := ApiParentDomainSearchResponse{}
	return &this
}

// GetAvailableParentDomain returns the AvailableParentDomain field value if set, zero value otherwise.
func (o *ApiParentDomainSearchResponse) GetAvailableParentDomain() []string {
	if o == nil || IsNil(o.AvailableParentDomain) {
		var ret []string
		return ret
	}
	return o.AvailableParentDomain
}

// GetAvailableParentDomainOk returns a tuple with the AvailableParentDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiParentDomainSearchResponse) GetAvailableParentDomainOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailableParentDomain) {
		return nil, false
	}
	return o.AvailableParentDomain, true
}

// HasAvailableParentDomain returns a boolean if a field has been set.
func (o *ApiParentDomainSearchResponse) HasAvailableParentDomain() bool {
	if o != nil && !IsNil(o.AvailableParentDomain) {
		return true
	}

	return false
}

// SetAvailableParentDomain gets a reference to the given []string and assigns it to the AvailableParentDomain field.
func (o *ApiParentDomainSearchResponse) SetAvailableParentDomain(v []string) {
	o.AvailableParentDomain = v
}

func (o ApiParentDomainSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiParentDomainSearchResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableParentDomain) {
		toSerialize["availableParentDomain"] = o.AvailableParentDomain
	}
	return toSerialize, nil
}

type NullableApiParentDomainSearchResponse struct {
	value *ApiParentDomainSearchResponse
	isSet bool
}

func (v NullableApiParentDomainSearchResponse) Get() *ApiParentDomainSearchResponse {
	return v.value
}

func (v *NullableApiParentDomainSearchResponse) Set(val *ApiParentDomainSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiParentDomainSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiParentDomainSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiParentDomainSearchResponse(val *ApiParentDomainSearchResponse) *NullableApiParentDomainSearchResponse {
	return &NullableApiParentDomainSearchResponse{value: val, isSet: true}
}

func (v NullableApiParentDomainSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiParentDomainSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


