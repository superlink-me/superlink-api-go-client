openapi: 3.0.1
info:
  contact:
    email: support@superlink.me
    name: API Support
    url: https://superlink.me/about#contact-us
  description: API for Superlink
  termsOfService: https://assets.superlink.me/tos-v2.html
  title: Superlink
  version: v0.0.1-alpha.5
servers:
- url: https://api.superlink.me/
paths:
  /v1/access-token:
    delete:
      description: Deletes an access token
      operationId: delete-access-token
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.AccessTokenDeleteRequest'
        description: access token delete request
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BadRequestResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BadRequestResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.InternalServerErrorResponse'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Deletes an access token
      tags:
      - access-token
      x-codegen-request-body-name: request
    get:
      description: Lists access tokens
      operationId: list-access-tokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AccessTokenResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.InternalServerErrorResponse'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Lists access tokens
      tags:
      - access-token
    post:
      description: Creates an admin token
      operationId: create-access-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.AccessTokenCreateRequest'
        description: access token create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.AccessTokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BadRequestResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.InternalServerErrorResponse'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Creates an admin token
      tags:
      - access-token
      x-codegen-request-body-name: request
  /v1/health:
    get:
      description: Checks the health of the API
      operationId: health-check
      responses:
        "200":
          content: {}
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Checks the health of the API
      tags:
      - health
  /v1/resolve/{domain}:
    get:
      description: resolve domain data by domain
      operationId: resolve-data-by-domain
      parameters:
      - description: firstname.lastname
        in: path
        name: domain
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ResolveWalletAddressByDomainResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.InternalServerErrorResponse'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Resolves wallets and DNS records for a domain
      tags:
      - resolution
components:
  schemas:
    api.AccessTokenCreateRequest:
      properties:
        label:
          type: string
        type:
          $ref: '#/components/schemas/data.AccessTokenType'
        validFrom:
          type: string
        validTill:
          type: string
      type: object
    api.AccessTokenDeleteRequest:
      properties:
        id:
          type: string
      type: object
    api.AccessTokenResponse:
      example:
        createdAt: createdAt
        validTill: validTill
        id: id
        label: label
        validFrom: validFrom
        type: type
        value: value
        updatedAt: updatedAt
      properties:
        createdAt:
          type: string
        id:
          type: string
        label:
          type: string
        type:
          type: string
        updatedAt:
          type: string
        validFrom:
          type: string
        validTill:
          type: string
        value:
          type: string
      type: object
    api.BadRequestResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/api.ErrorResponse'
          type: array
      type: object
    api.DNSRecord:
      example:
        name: name
        type: type
        ttl: 0
        value: value
      properties:
        name:
          type: string
        ttl:
          type: integer
        type:
          type: string
        value:
          type: string
      type: object
    api.ErrorResponse:
      properties:
        field:
          type: string
        info:
          type: string
      type: object
    api.InternalServerErrorResponse:
      properties:
        message:
          type: string
      type: object
    api.ResolveWalletAddressByDomainResponse:
      example:
        records:
        - name: name
          type: type
          ttl: 0
          value: value
        - name: name
          type: type
          ttl: 0
          value: value
        domain: domain
        wallets:
          key: wallets
      properties:
        domain:
          type: string
        records:
          items:
            $ref: '#/components/schemas/api.DNSRecord'
          type: array
        wallets:
          additionalProperties:
            type: string
          type: object
      type: object
    data.AccessTokenType:
      enum:
      - ADMIN
      - CUSTOMER
      type: string
      x-enum-varnames:
      - AccessTokenTypeAdmin
      - AccessTokenTypeCustomer
  securitySchemes:
    BearerAuth:
      description: Type "Bearer" followed by a space and the JWT token.
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
